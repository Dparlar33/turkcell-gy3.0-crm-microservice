version: '3.8'
services:
  config-server:
    container_name: config-server-prod
    build: ./configServer
    ports:
      - "8050:8050"
    depends_on:
      - discovery-server
    networks:
      - common

  discovery-server:
    container_name: discovery-server-prod
    build: ./discoveryServer
    ports:
      - "9000:9000"
    networks:
      - common

  gateway-service:
    container_name: gateway-service-prod
    build: ./gatewayService
    ports:
      - "9002:9002"
    depends_on:
      - discovery-server
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIG_URL=http://config-server:8050
    restart: on-failure
    networks:
      - common

  customer-service:
    container_name: customer-service-prod
    build: ./customerService
    ports:
      - "10050:10050"
    depends_on:
      - discovery-server
      - config-server
      - gateway-service
      - customer-db
    networks:
      - common

  account-service:
    container_name: account-service-prod
    build: ./accountService
    ports:
      - "10051:10051"
    depends_on:
      - discovery-server
      - config-server
      - gateway-service
      - account-db
    networks:
      - common

  basket-service:
    container_name: basket-service-prod
    build: ./basketService
    ports:
      - "10052:10052"
    depends_on:
      - discovery-server
      - config-server
      - gateway-service
      - basket-db
    networks:
      - common

  catalog-service:
    container_name: catalog-service-prod
    build: ./catalogService
    ports:
      - "10053:10053"
    depends_on:
      - discovery-server
      - config-server
      - gateway-service
      - catalog-db
    networks:
      - common

  identity-service:
    container_name: identity-service-prod
    build: ./identityService
    ports:
      - "10054:10054"
    depends_on:
      - discovery-server
      - config-server
      - gateway-service
      - identity-db
    networks:
      - common

  invoice-service:
    container_name: invoice-service-prod
    build: ./invoiceService
    ports:
      - "10055:10055"
    depends_on:
      - discovery-server
      - config-server
      - gateway-service
      - invoice-db
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CLOUD_CONFIG_URI=http://config-server-prod:8050
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - common

  sales-service:
    container_name: sales-service-prod
    build: ./salesService
    ports:
      - "10056:10056"
    depends_on:
      - discovery-server
      - config-server
      - gateway-service
      - sales-db
      - kafka
    networks:
      - common

  search-service:
    container_name: search-service-prod
    build: ./searchService
    ports:
      - "10057:10057"
    depends_on:
      - discovery-server
      - config-server
      - gateway-service
      - search-db
    networks:
      - common

  customer-db:
    image: postgres
    container_name: customer-db-prod
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    ports:
      - "5460:5432"
    volumes:
      - customer_data_prod:/var/lib/postgresql/data
    networks:
      - common

  account-db:
    image: postgres
    container_name: account-db-prod
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    ports:
      - "5461:5432"
    volumes:
      - account_data_prod:/var/lib/postgresql/data
    networks:
      - common

  catalog-db:
    image: postgres
    container_name: catalog-db-prod
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    ports:
      - "5462:5432"
    volumes:
      - catalog_data_prod:/var/lib/postgresql/data
    networks:
      - common

  invoice-db:
    image: postgres
    container_name: invoice-db-prod
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    ports:
      - "5463:5432"
    volumes:
      - invoice_data_prod:/var/lib/postgresql/data
    networks:
      - common

  identity-db:
    image: postgres
    container_name: identity-db-prod
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    ports:
      - "5464:5432"
    volumes:
      - identity_data_prod:/var/lib/postgresql/data
    networks:
      - common

  search-db:
    image: mongo:latest
    container_name: search-db-prod
    ports:
      - "27030:27017"
    volumes:
      - search_data_prod:/data/db
    networks:
      - common

  sales-db:
    image: mongo:latest
    container_name: sales-db-prod
    ports:
      - "27021:27017"
    volumes:
      - sales_data_prod:/data/db
    networks:
      - common

  basket-db:
    image: redis:latest
    container_name: basket-db-prod
    ports:
      - "6380:6379"
    volumes:
      - basket_data_prod:/data
    networks:
      - common

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - common

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://kafka:9092  # Different listener names
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="example-topic:1:1"
    depends_on:
      - zookeeper
    networks:
      - common

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    ports:
      - "9030:9000"
    environment:
      - KAFKA_BROKER_CONNECT=kafka:9093  # Using the inside listener
    depends_on:
      - kafka
    networks:
      - common

volumes:
  customer_data_prod:
    name: customer_data_prod
  account_data_prod:
    name: account_data_prod
  catalog_data_prod:
    name: catalog_data_prod
  invoice_data_prod:
    name: invoice_data_prod
  identity_data_prod:
    name: identity_data_prod
  search_data_prod:
    name: search_data_prod
  sales_data_prod:
    name: sales_data_prod
  basket_data_prod:
    name: basket_data_prod

networks:
  common:
    driver: bridge

